#!/bin/bash
# Exit immediately if a command exits with a non-zero status
set -e
ENV=$1

helm repo add linkerd-edge https://helm.linkerd.io/edge
helm repo update

set +e
# Run the Linkerd check command, which might fail.
linkerd_check_output=$(linkerd check --pre 2>&1)
linkerd_status=$?

# Re-enable exit on error
set -e


# Print the captured output for debugging purposes
echo "Linkerd check output:"
echo "$linkerd_check_output"

# Check if the linkerd check command failed
if [ $linkerd_status -ne 0 ]; then
    # Check if the output contains the specific "namespace already exists" message
    if echo "$linkerd_check_output" | grep -q 'namespace already exists'; then
        # Prompt the user for confirmation
        while true; do
            read -p "linkerd check --pre failed. Do you want to continue? LinkerD is already deployed to the current cluster (yes/no): " yn
            case $yn in
                [Yy]* ) break;;  # User chose to continue
                [Nn]* ) exit 1;;  # User chose to exit
                * ) echo "Please answer yes or no.";;
            esac
        done
    else
        echo "linkerd check --pre failed for a reason other than 'namespace already exists'."
        exit 1
    fi
fi

echo "installing LinkerD CRDs"
helm upgrade \
  --install linkerd-crds linkerd-edge/linkerd-crds \
  --create-namespace --namespace linkerd

echo "installing LinkerD Control Plane"
helm upgrade \
  --install linkerd-control-plane linkerd-edge/linkerd-control-plane \
  --namespace linkerd \
  --set proxyInit.runAsRoot=true \
  --set-file identityTrustAnchorsPEM=./iac/certificates/$ENV/linkerd/ca.crt \
  --set-file identity.issuer.tls.crtPEM=./iac/certificates/$ENV/linkerd/issuer.crt \
  --set-file identity.issuer.tls.keyPEM=./iac/certificates/$ENV/linkerd/issuer.key

linkerd check

echo "installing LinkerD VIZ"
helm upgrade \
  --install linkerd-viz linkerd-edge/linkerd-viz \
  --namespace linkerd-viz --create-namespace