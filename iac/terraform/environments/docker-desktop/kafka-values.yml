global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""
  namespaceOverride: ""

kafka:
  enabled: true
  zookeeper:
    enabled: false  # Disable Zookeeper
  image:
    registry: docker.io
    repository: bitnami/kafka
    tag: 3.1.0-debian-10-r28
  replicaCount: 3
  resources:
    requests:
      memory: 1024Mi
      cpu: 500m
    limits:
      memory: 2048Mi
      cpu: 1000m
  persistence:
    enabled: true
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 8Gi
  configurationOverrides: 
    server.properties: |
      process.roles=broker,controller
      node.id=1
      controller.quorum.voters=1@broker-0.broker-headless.default.svc.cluster.local:9093,2@broker-1.broker-headless.default.svc.cluster.local:9093,3@broker-2.broker-headless.default.svc.cluster.local:9093
      listeners=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      listener.security.protocol.map=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      inter.broker.listener.name=PLAINTEXT
      controller.listener.names=CONTROLLER
      log.dirs=/bitnami/kafka/data
      log.retention.hours=168
      log.segment.bytes=1073741824
      offsets.topic.replication.factor=1
      transaction.state.log.replication.factor=1
      transaction.state.log.min.isr=1
      group.initial.rebalance.delay.ms=0
      group.min.session.timeout.ms=6000
      group.max.session.timeout.ms=300000
      zookeeper.session.timeout.ms=6000
      replica.lag.time.max.ms=5000

service:
  type: ClusterIP
  port: 9092
  nodePort: ""
  externalPort: ""
  loadBalancerIP: ""
  annotations: {}
  loadBalancerSourceRanges: []

metrics:
  kafka:
    enabled: false
  jmx:
    enabled: false

rbac:
  create: true

podAnnotations: {}
affinity: {}
nodeSelector: {}
tolerations: []
